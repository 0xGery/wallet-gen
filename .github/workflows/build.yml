name: Build Executables

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x64
            bun-target: bun-linux-x64
            artifact-name: wallet-generator-linux-x64
            executable-ext: ""
          - os: windows-latest
            target: windows-x64
            bun-target: bun-windows-x64
            artifact-name: wallet-generator-windows-x64
            executable-ext: ".exe"
          - os: macos-latest
            target: macos-x64
            bun-target: bun-darwin-x64
            artifact-name: wallet-generator-macos-x64
            executable-ext: ""
          - os: macos-latest
            target: macos-arm64
            bun-target: bun-darwin-arm64
            artifact-name: wallet-generator-macos-arm64
            executable-ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build executable
        run: bun build --compile --target=${{ matrix.bun-target }} --outfile=wallet-generator${{ matrix.executable-ext }} ./wallet_generator.ts

      - name: Test executable (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          chmod +x ./wallet-generator${{ matrix.executable-ext }}
          ./wallet-generator${{ matrix.executable-ext }} --help || echo "No help command available"

      - name: Test executable (Windows)
        if: runner.os == 'Windows'
        run: |
          .\wallet-generator${{ matrix.executable-ext }} --help || echo "No help command available"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: wallet-generator${{ matrix.executable-ext }}
          retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -la ./artifacts/

      - name: Create release archives
        run: |
          cd ./artifacts
          for dir in */; do
            artifact_name=${dir%/}
            cd "$dir"
            if [[ "$artifact_name" == *"windows"* ]]; then
              zip "../${artifact_name}.zip" wallet-generator.exe
            else
              tar -czf "../${artifact_name}.tar.gz" wallet-generator
            fi
            cd ..
          done
          ls -la

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/*.zip
            ./artifacts/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 